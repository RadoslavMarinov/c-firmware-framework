/***********************************************************************************************************************
 * C Header: xxx-yyy-derivative.h
 * Component:
 *=====================================================================================================================
 * C Software Construction Framework v1-1-03.16
 * ï¿½ 2016 ADD-Bulgaria Ltd.
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Include guard
 **********************************************************************************************************************/
#ifndef __WORD_DERIVATIVE_INTERFCE__
#define __WORD_DERIVATIVE_INTERFCE__

/**********************************************************************************************************************
 * Dependency check
 **********************************************************************************************************************/
 #ifndef WORD_onInvalidStringFormat
 	#error Missing required WORD_onInvalidStringFormat()
 #endif

 /**********************************************************************************************************************
 * Private typedefs (__xxx)
 **********************************************************************************************************************/
typedef struct
{
	uint16_t start;
	uint16_t end;
}__word_WordData;	//32bit aligned anyway


 /**********************************************************************************************************************
 * Private object-like macros   (__xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Private function-like macros that DO return value  (__xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Private function-like macros that DO NOT return value (__xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Protected typedefs (_xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Protected object-like macros  (_xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Protected function-like macros that DO return value  (_xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Protected function-like macros that DO NOT return value  (_xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Public typedefs  (xxx)
 **********************************************************************************************************************/
typedef struct
{
	__word_WordData name;
	__word_WordData value;
}word_SelfData;


 /**********************************************************************************************************************
 * Public object-like macros  (xxx)
 **********************************************************************************************************************/

 /**********************************************************************************************************************
 * Public function-like macros that DO return value (xxx)
 **********************************************************************************************************************/
#define word_getNameStart()											( WORD_selfData.name.start )
#define word_getNameEnd()                               			( WORD_selfData.name.end )

#define word_getValueStart()                                 		( WORD_selfData.value.start )
#define word_getValueEnd()                              			( WORD_selfData.value.end )


//#define word_getNameAddress()										( (void*)&(WORD_getBuffer()[word_getNameStart()]) )

// Returns integer representation of Value


/**********************************************************************************************************************
* Public function-like macros that DO NOT return value (xxx)
**********************************************************************************************************************/

#define word_setNameStart(val)									do{ WORD_selfData.name.start = (val); 									}while(0)
#define word_setNameEnd(val)                       				do{ WORD_selfData.name.end = (val); 									}while(0)
#define word_setValueStart(val)                        			do{ WORD_selfData.value.start = (val); 									}while(0)
#define word_setValueEnd(val)                      				do{ WORD_selfData.value.end  = (val); 									}while(0)


 /**********************************************************************************************************************
 * Public function declarations(extern)
 **********************************************************************************************************************/
extern uint16_t word_convertStringHex2Word(const char* string, uint8_t stringLength);
extern uint8_t word_convertStringHex2Byte(const char* string, uint8_t stringLength);
#endif //__WORD_DERIVATIVE_INTERFCE__
/***********************************************************************************************************************
* End of File
***********************************************************************************************************************/
